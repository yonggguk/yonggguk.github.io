<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yonggguk/github.io/</id><title>거북이 개발자</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-07-19T23:52:22+09:00</updated> <author> <name>yong</name> <uri>https://yonggguk/github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yonggguk/github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yonggguk/github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 yong </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>7월 3주차 리뷰</title><link href="https://yonggguk/github.io/posts/3rd-Week-Review/" rel="alternate" type="text/html" title="7월 3주차 리뷰" /><published>2022-07-19T16:00:00+09:00</published> <updated>2022-07-19T16:00:00+09:00</updated> <id>https://yonggguk/github.io/posts/3rd-Week-Review/</id> <content src="https://yonggguk/github.io/posts/3rd-Week-Review/" /> <author> <name>yonggguk</name> </author> <category term="WeekReview" /> <category term="R-2022-07" /> <summary> 7월 3주차 리뷰~ 꾸준함이 부족했다. 3주차는 꾸준함이 조금 부족했다. 시작한 깃헙 페이지로 공부한 포스트를 정리 해놓지 못했고 또한, 공부한 것들도 깊숙하게 공부하지 못한 느낌이 든다. 더 시간을 투자하면서 더 효율적인 방법을 찾아야겠다! 계획이 부족했다. 너무 이것저것 주먹구구식으로 3주차를 살았던 것(?) 같다. 좀 더 체계적이고 구체적인 계획을 세우고 실천해야겠다. 가끔은 일단 하는 실천력도 중요하지만 정리를 하면서 진행해 나가야할 필요가 있다. 3주차 결과 만족하지 못한 주였다. 개발을 하면서 공부를 하면서, 정리되는 것이 없고 내 것으로 만들지 못했다고 생각했다. 복습은 필수요! 성장도 필수요! 날이 덥지만 의욕은 더 뜨겁게 4주차를 시작해보자! 3주차 리뷰도 4주차에 쓰는 것이... </summary> </entry> <entry><title>Java ArrayList, Array Sorting, 다중 정렬</title><link href="https://yonggguk/github.io/posts/Sorting/" rel="alternate" type="text/html" title="Java ArrayList, Array Sorting, 다중 정렬" /><published>2022-07-19T09:00:00+09:00</published> <updated>2022-07-19T09:00:00+09:00</updated> <id>https://yonggguk/github.io/posts/Sorting/</id> <content src="https://yonggguk/github.io/posts/Sorting/" /> <author> <name>yonggguk</name> </author> <category term="Algorithm" /> <summary> </summary> </entry> <entry><title>getter와 setter를 사용하는 이유</title><link href="https://yonggguk/github.io/posts/What-is-the-getter-and-setter/" rel="alternate" type="text/html" title="getter와 setter를 사용하는 이유" /><published>2022-07-13T10:00:00+09:00</published> <updated>2022-07-13T10:00:00+09:00</updated> <id>https://yonggguk/github.io/posts/What-is-the-getter-and-setter/</id> <content src="https://yonggguk/github.io/posts/What-is-the-getter-and-setter/" /> <author> <name>yonggg</name> </author> <category term="JAVA" /> <summary> getter와 setter를 사용하는 이유에 대해 이 글을 읽기 전 알고 있어야 할 지식들?! 각 접근 제어자의 차이점 각 접근 제어자의 차이점을 객제지향 설계 5원칙 가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사가나다라마바사 자바에서 @getter와 @setter를 사용하는 이유? test public class main{ public st... </summary> </entry> <entry><title>접근제어자에 대해 알아봅시다!</title><link href="https://yonggguk/github.io/posts/What-is-the-Access-Modifier/" rel="alternate" type="text/html" title="접근제어자에 대해 알아봅시다!" /><published>2022-07-07T09:00:00+09:00</published> <updated>2022-07-12T23:19:42+09:00</updated> <id>https://yonggguk/github.io/posts/What-is-the-Access-Modifier/</id> <content src="https://yonggguk/github.io/posts/What-is-the-Access-Modifier/" /> <author> <name>yonggguk</name> </author> <category term="JAVA" /> <summary> 접근제어자(Access Modifier)란 무엇일까? 접근제어자란. 변수와 함수, 클래스에 대한 접근을 제한하는 역할을 하는 예약어입니다. 접근제어자를 사용하는 이유는? 우리가 항상 문제를 해결하거나 문제를 해결하기 위해 프로그래밍을 할 때 각 기능을 사용하는 이유와 근거가 있어야 합니다! 서론이 길었지만 … 지금부터 그럼, 우리가 접근제어자를 사용하는 이유에 대해 알아봅시다. 첫번째 이유로는 보안 때문입니다. 모든 변수를 public으로 설정하게 된다면 어디서든지 변경 또는 참조가 가능하여 무분별한 사용과 변경으로 중요한 정보가 노출되거나 변경될 수 있기 때문입니다. 두번째 이유로는, 외부로 생기는 오류를 줄이기 위함이다. 사용자나 외부에서 사용하는 객체에서 내... </summary> </entry> <entry><title>What is software developer...?</title><link href="https://yonggguk/github.io/posts/What-is-software-developer/" rel="alternate" type="text/html" title="What is software developer...?" /><published>2022-07-05T09:00:00+09:00</published> <updated>2022-07-05T09:00:00+09:00</updated> <id>https://yonggguk/github.io/posts/What-is-software-developer/</id> <content src="https://yonggguk/github.io/posts/What-is-software-developer/" /> <author> <name>yonggguk</name> </author> <category term="yong'sThinking" /> <category term="T-2022-07" /> <summary> 개발자란 ?? 어떤 유튜브 영상이였는지는 정확히 기억이 나지 않지만 한 말씀이 제일 기억이 남았다. 개발자는 코드를 작성하는 직업이 아니라 문제를 해결하는 직업이다. 라는 말씀이었다. 이 말씀을 들은 이후 그동안에 내가 진짜 개발자였는지 그냥 코드만 작성하려는 사람이었는지 생각하게 되었다. 지금껏 걸어온 길을 되돌아보니 나는 개발자보단 코드만 작성하려는 사람이 맞았다. 문제를 해결하기 위해 코드를 작성하려는 것이 아닌 코드를 작성하고 문제 해결은 생각도 하지 않았던 것 같다. 이것이 그 동안 얕게만 공부하던 이유지 않을까? 코드를 작성하는데 고민이 별로 없었던 이유지 않을까? 라는 생각을 하게 되었다. 늦었지만… 지금부터라도 문제를 해결하기 위해 코드를 작성하는 개발자가 되어야겠다… 개발... </summary> </entry> </feed>
